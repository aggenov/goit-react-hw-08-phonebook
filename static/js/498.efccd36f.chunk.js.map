{"version":3,"file":"static/js/498.efccd36f.chunk.js","mappings":"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","sources":["components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/filter.jsx","pages/contactsPage/ContactsPage.styled.js","pages/contactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\n\nexport const SearchList = styled.ul`\n    padding: 0px;\n    margin: 0px;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    flex-direction: row;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  color: blue;\n  justify-content: space-between;\n  // padding: 2px;\n  \n\n  cursor: pointer;\n\n  &:hover {\n    background-color: #f0f0f0;\n\n     button {\n        // border-color: red;\n        // color: red;\n        opacity: 1;\n        // transform: scale(1.025);\n      }\n    \n  }\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  :not(:last-child) {\n    margin-right: 5px;\n  }\n`;\n\nexport const Button = styled.button`\nfont-size: 12px;\nwidth: 96px;\nheight: 24px;\nbackground-color: white;\nborder: 1px solid gray;\nborder-radius: 5px;\ncursor: pointer;\nopacity: 0.6;\n\n&:hover, &:focus {\n  border-color: red;\n  color: red;\n  opacity: 1;\n}\n`;","import PropTypes from \"prop-types\";\nimport { SearchList, ContactItem, Text, Button } from './ContactListItem.styled';\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/operations\";\n\nexport const ContactListItem = ({ renderListItem: { id, name, number } }) => {\n\n  const dispatch = useDispatch();\n\n  return ( \n\n    <ContactItem key={id}>\n      <SearchList>\n        <Text>{name}:</Text>\n        <Text>{number}</Text>\n      </SearchList>\n      <Button type=\"button\" onClick={() => dispatch(deleteContact(id))}>\n        Delete\n      </Button>\n    </ContactItem> \n     \n  );\n};\n\nContactListItem.propTypes = {\n  renderListItem: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n};","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  /* padding: 0px 0px 0px 20px; */\n  padding: 0;\n`;\n","import { ContactListItem } from \"../ContactListItem/ContactListItem\";\n\nimport { List } from \"./ContactList.styled\";\n\nimport {  useSelector } from \"react-redux\";\nimport { selectFilteredContacts } from \"redux/selectors\";\n\n\n\nexport const ContactList = () => {\n\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  return (\n    <>\n    <List>    \n        {filteredContacts.map(contact => (\n            <ContactListItem\n              key={contact.id}\n              renderListItem={contact}\n            />            \n          )\n        )}    \n    </List>  \n    </> \n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const FormStyle = styled.div`\n  margin: 0px;\n  color: block;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  /* padding: 0 20px; */\n  padding: 0;\n  /* border: 1px solid gray; */\n  border-radius: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n  width: 250px;\n  height: 25px;\n  border: 0.5px solid black;\n  border-radius: 5px;\n  padding: 5px 15px;\n  letter-spacing: 2px;\n`;\n\nexport const Button = styled.button`\n  width: 96px;\n  height: 24px;\n  background-color: white;\n  border: 1px solid gray;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    border-color: green;\n    color: green;\n    // background-color: lightgreen;\n  }\n\n  &:disabled {\n    cursor: auto;\n    border-color: gray;\n    color: gray;\n    background-color: lightgray;\n  }\n`;\n","import { useState } from \"react\";\n\nimport { FormStyle, Label, Input, Button } from \"./ContactForm.styled\";\n\nimport { useDispatch, useSelector } from \"react-redux\"; \nimport { addContact } from \"redux/operations\";\nimport { selectContacts } from \"redux/selectors\";\nimport { Notify } from \"notiflix\";\n\n\nexport const ContactForm = () => {\n\n  //локальный стейт для формы\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contact = {\n      name: name,\n      number: number,\n  }\n  \n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const newContactName = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase().trim());\n    if (newContactName) {\n      Notify.failure(`Name  \"${name}\"  is already in contacts`, Notify.init({\n        clickToClose: true,\n        position: 'center-top',\n      }));\n      return;\n    }\n\n    const newContactNumber = contacts.find(contact => contact.number === number);\n    if (newContactNumber) {\n      Notify.failure(`Phone   \"${number}\"  is already in contacts`, Notify.init({\n        clickToClose: true,\n        position: 'center-top',\n      }));\n      return;\n    }\n\n    dispatch(addContact(contact));\n    reset();\n  };\n\n  //изменение значений полей импута через стейт\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n     switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  //очистка полей инпута\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n\n  return(\n    <>\n    <form onSubmit={handleSubmit}>\n    <FormStyle>      \n      <Label>\n        Name \n        <Input\n          type='text' \n          name='name'\n          value={name} \n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required='Name required'\n        />\n      </Label> \n\n      <Label>\n        Phone \n        <Input\n          type='tel' \n          name='number'\n          value={number} \n              onChange={handleChange}\n              placeholder=\"_ _ _ - _ _ _ - _ _ _ _\"\n          pattern=\"^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required='Phone number required'\n        />\n      </Label> \n\n      <Button type=\"submit\" disabled={!name || !number} >Add contact</Button>\n    </FormStyle>\n    </form>\n    </>\n  )\n}\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-weight: 500;\n  color: lightgrey;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n  width: 250px;\n  height: 25px;\n  border: 0.5px solid black;\n  border-radius: 5px;\n  padding: 5px 15px;\n`;\n","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './Filter.styled'\nimport { changeFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter)\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name='contactsFilter'\n        value={filter}\n        onChange={(event) => dispatch(changeFilter(event.currentTarget.value))}>\n      </Input>\n    </Label>\n  );\n};","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  padding: 30px 40px;\n  width: 440px;\n\n  border: 1px solid #aaa;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px -1px,\n    rgba(0, 0, 0, 0.14) 0px 4px 5px 0px,\n    rgba(11, 127, 171, 0.5) 0px 0px 25px 5px;\n\n  margin: 30px auto;\n  // margin: 40px;\n  // max-width: fit-content;\n`;\n\nexport const Text = styled.h1`\n  margin: 0 0 10px 0;\n`;\n","import { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/operations';\nimport { Filter } from 'components/Filter/filter';\n// import { Container, Box } from '@mui/material\n\nimport { Box } from './ContactsPage.styled';\nimport { Text } from './ContactsPage.styled';\n\nimport { useAuth, useContact } from 'hooks';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { useNavigate } from 'react-router-dom';\n\nimport { Helmet } from 'react-helmet';\n\n\n\n\nexport default function ContactsPage() {\n  \n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  const { isLoading, error } = useContact();\n  const { isLoggedIn } = useAuth();\n\n  useEffect(() => {\n    if (!isLoggedIn) {\n      navigate('/login');\n    }\n    // eslint-disable-next-line\n  }, [isLoggedIn]);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      <Box>\n        <Text>Phonebook</Text>\n        <ContactForm />\n      </Box>\n\n      <Box>\n        {error && <p>{error}</p>}\n        {isLoading ? (\n          <RotatingLines\n            strokeColor=\"rgb(11, 127, 171)\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        ) : (\n          <>\n            <Text>Contacts</Text>\n            <Filter />\n            <ContactList />\n          </>\n        )}\n      </Box>\n    </>\n  );\n}\n"],"names":["SearchList","styled","ContactItem","Text","Button","ContactListItem","renderListItem","id","name","number","dispatch","useDispatch","type","onClick","deleteContact","List","ContactList","filteredContacts","useSelector","selectFilteredContacts","map","contact","FormStyle","Label","Input","ContactForm","useState","setName","setNumber","contacts","selectContacts","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","newContactName","find","toLowerCase","trim","Notify","clickToClose","position","newContactNumber","addContact","onChange","pattern","title","required","placeholder","disabled","Filter","filter","selectFilter","changeFilter","Box","ContactsPage","navigate","useNavigate","useContact","isLoading","error","isLoggedIn","useAuth","useEffect","fetchContacts","Helmet","strokeColor","strokeWidth","animationDuration","width","visible"],"sourceRoot":""}