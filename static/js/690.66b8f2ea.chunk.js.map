{"version":3,"file":"static/js/690.66b8f2ea.chunk.js","mappings":"4RAEaA,EAAaC,EAAAA,EAAAA,GAAH,4IASVC,EAAcD,EAAAA,EAAAA,GAAH,2WAsBXE,EAAOF,EAAAA,EAAAA,EAAH,0FAOJG,EAASH,EAAAA,EAAAA,OAAH,0R,SCtCNI,EAAeJ,EAAAA,EAAAA,IAAH,uOAYZK,EAAML,EAAAA,EAAAA,IAAH,8XAgBHM,EAAaN,EAAAA,EAAAA,IAAH,6F,mBCxBjBO,EAAYC,SAASC,cAAc,eAwCzC,EAtCc,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,SAAUC,EAAc,EAAdA,SACzBC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,SAAAC,GACD,WAAfA,EAAMC,MACRJ,GAEH,EAID,OAFAK,OAAOC,iBAAiB,UAAWJ,GAE5B,WACLG,OAAOE,oBAAoB,UAAWL,EACvC,CAEF,GAAE,CAACF,IAQJ,OAAOQ,EAAAA,EAAAA,eACL,SAACf,EAAD,CAAcgB,QAAS,SAACC,GAAD,OAPG,SAAAA,GACtBA,EAAEC,gBAAkBD,EAAEE,QACxBZ,GAEH,CAG+Ba,CAAoBH,EAA3B,EAAvB,UACE,SAACf,EAAD,WACE,SAACD,EAAD,UACGK,QAGUH,EAEpB,ECrCYkB,EAAYzB,EAAAA,EAAAA,IAAH,kPAaT0B,EAAQ1B,EAAAA,EAAAA,MAAH,kHAOL2B,EAAQ3B,EAAAA,EAAAA,MAAH,uMAWLG,EAASH,EAAAA,EAAAA,OAAH,uYAuBNE,EAAOF,EAAAA,EAAAA,GAAH,+C,oBCiEjB,EA/GiB,SAAC,GAAmC,IAAjCW,EAAgC,EAAhCA,QAASiB,EAAuB,EAAvBA,GAAIC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAE/BC,GAAWC,EAAAA,EAAAA,MAEXC,EAAcJ,EACdK,EAAgBJ,EAGtB,GAAgCK,EAAAA,EAAAA,UAASN,GAAzC,eAAOO,EAAP,KAAiBC,EAAjB,KACA,GAAoCF,EAAAA,EAAAA,UAASL,GAA7C,eAAOQ,EAAP,KAAmBC,EAAnB,KAEMC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAsD7B,OACE,+BACA,iBAAMC,SAtDa,SAAA7B,GACnBA,EAAM8B,iBAEN,IAAMC,EAAkBL,EAASM,MAAK,SAAAC,GAAO,OAAIA,EAAQlB,KAAKmB,gBAAkBZ,EAASY,cAAcC,MAA1D,IAEvCC,EAAoBV,EAASM,MAAK,SAAAC,GAAO,OAAIA,EAAQjB,SAAWQ,CAAvB,IAC/C,GAAIO,GAAmBK,EACrBC,EAAAA,OAAAA,QAAA,iBAAyBf,EAAzB,6BAA8De,EAAAA,OAAAA,KAAY,CACxEC,cAAc,EACdC,SAAU,qBAId,GAAIH,GAAqBL,EACvBM,EAAAA,OAAAA,QAAA,mBAA2Bb,EAA3B,6BAAkEa,EAAAA,OAAAA,KAAY,CAC5EC,cAAc,EACdC,SAAU,oBAHd,CASA,IAAMC,EAAOxC,EAAMQ,cACnBS,GAASwB,EAAAA,EAAAA,IAAY,CACnB3B,GAAAA,EACAC,KAAMyB,EAAKE,SAAS3B,KAAK4B,MACzB3B,OAAQwB,EAAKE,SAAS1B,OAAO2B,SAG/BC,YAAW,WACT3B,GAASwB,EAAAA,EAAAA,MACV,GAAE,KAECtB,IAAgBG,GACnBe,EAAAA,OAAAA,QAAA,qBAA6BlB,EAA7B,mCAAmEG,EAAnE,KAAgFe,EAAAA,OAAAA,KAAY,CACzFC,cAAc,EACdC,SAAU,gBAGVnB,IAAkBI,GACrBa,EAAAA,OAAAA,QAAA,qBAA6BlB,EAA7B,uBAA+DkB,EAAAA,OAAAA,KAAY,CACxEC,cAAc,EACdC,SAAU,gBAIdC,EAAKK,OA3BJ,CA4BF,EAOC,UACE,UAAClC,EAAD,YACI,SAAC,EAAD,UAAM,kBACV,UAACC,EAAD,WAAO,QAEL,SAACC,EAAD,CACEiC,KAAK,OACL/B,KAAK,OACLgC,aAAc5B,EACd6B,SAAU,SAAChD,GAAD,OAAWuB,EAAYvB,EAAMS,OAAOkC,MAApC,EACVM,YAAY,aACZC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAIZ,UAACxC,EAAD,WAAO,SAEL,SAACC,EAAD,CACEiC,KAAK,MACL/B,KAAK,SACLgC,aAAc3B,EACd4B,SAAU,SAAChD,GAAD,OAAWyB,EAAczB,EAAMS,OAAOkC,MAAtC,EACVM,YAAY,0BACZC,QAAQ,2FACRC,MAAM,+FACNC,UAAQ,QAIR,iBAAKC,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAApC,WACE,SAAC,EAAD,CACET,KAAK,SACLU,SAAUrC,IAAgBG,EAAWF,IAAkBI,EAFzD,SAGC,UACD,SAAC,EAAD,CAAQsB,KAAK,SAASxC,QAAST,EAA/B,SAAwC,oBAMnD,EC7GY4D,EAAkB,SAAC,GAA8C,IAAD,IAA3CC,eAAkB5C,EAAyB,EAAzBA,GAAIC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,OAC5D,GAAkCK,EAAAA,EAAAA,WAAS,GAA3C,eAAOsC,EAAP,KAAkBC,EAAlB,KAEMC,EAAa,WACbF,GACFC,GAAa,EAEhB,EAQK3C,GAAWC,EAAAA,EAAAA,MAUjB,OAEE,UAAC/B,EAAD,YACE,UAACF,EAAD,YACE,UAACG,EAAD,WAAO2B,EAAK,QACZ,SAAC3B,EAAD,UAAO4B,QAET,iBAAKqC,MAAO,CAACC,QAAS,OAAQC,IAAK,QAAnC,WACE,SAAClE,EAAD,CAAQyD,KAAK,SAASO,MAAO,CAACS,MAAM,QAASxD,QAxBjC,WACXqD,GACHC,GAAa,EAEhB,EAoBK,SAAiE,UAGjE,SAACvE,EAAD,CAAQyD,KAAK,SAASxC,QAnBD,WACzBW,GAAS8C,EAAAA,EAAAA,IAAcjD,IACvBuB,EAAAA,OAAAA,QAAA,qBAA6BtB,EAA7B,cAA+CsB,EAAAA,OAAAA,KAAY,CACvDC,cAAc,EACdC,SAAU,eAEf,EAaK,SAAmD,cAIpDoB,IACC,SAAC,EAAD,CAAO9D,QAASgE,EAAhB,UACE,SAAC,EAAD,CACE/C,GAAIA,EACJC,KAAMA,EACNC,OAAQA,EACRnB,QAASgE,QAnBC/C,EAyBrB,EC5DYkD,EAAO9E,EAAAA,EAAAA,GAAH,2ECOJ+E,EAAc,WACzB,IAAMC,GAAmBvC,EAAAA,EAAAA,IAAYwC,EAAAA,IACrC,OACE,+BACA,SAACH,EAAD,UACKE,EAAiBE,KAAI,SAAAnC,GAAO,OACzB,SAACwB,EAAD,CAEEC,eAAgBzB,GADXA,EAAQnB,GAFU,OAUpC,ECtBYH,EAAYzB,EAAAA,EAAAA,IAAH,kPAaT0B,GAAQ1B,EAAAA,EAAAA,MAAH,kHAOL2B,GAAQ3B,EAAAA,EAAAA,MAAH,uMAWLG,GAASH,EAAAA,EAAAA,OAAH,wYAuBNE,GAAOF,EAAAA,EAAAA,GAAH,+CC9CJmF,GAAc,SAAC,GAAiB,IAAfxE,EAAc,EAAdA,QAG5B,GAAwBwB,EAAAA,EAAAA,UAAS,IAAjC,eAAON,EAAP,KAAauD,EAAb,KACA,GAA4BjD,EAAAA,EAAAA,UAAS,IAArC,eAAOL,EAAP,KAAeuD,EAAf,KAEMtC,EAAU,CACZlB,KAAMA,EACNC,OAAQA,GAGNC,GAAWC,EAAAA,EAAAA,MAEXQ,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,IAsCvB4C,EAAe,SAAAxE,GACnB,MAAwBA,EAAMQ,cAAtBO,EAAR,EAAQA,KAAM4B,EAAd,EAAcA,MAEb,OAAQ5B,GACP,IAAK,OACHuD,EAAQ3B,GACR,MAEF,IAAK,SACH4B,EAAU5B,GACV,MAEF,QACE,OAEL,EAGKE,EAAQ,WACZyB,EAAQ,IACRC,EAAU,GACX,EAGD,OACE,+BACA,iBAAM1C,SA9Da,SAAA7B,GACnBA,EAAM8B,iBAEN,IAAM2C,EAAiB/C,EAASM,MAAK,SAAAC,GAAO,OAAIA,EAAQlB,KAAKmB,gBAAkBnB,EAAKmB,cAAcC,MAAtD,IAC5C,GAAIsC,EACFpC,EAAAA,OAAAA,QAAA,iBAAyBtB,EAAzB,6BAA0DsB,EAAAA,OAAAA,KAAY,CACpEC,cAAc,EACdC,SAAU,oBAHd,CAQA,IAAMmC,EAAmBhD,EAASM,MAAK,SAAAC,GAAO,OAAIA,EAAQjB,SAAWA,CAAvB,IAC1C0D,EACFrC,EAAAA,OAAAA,QAAA,mBAA2BrB,EAA3B,6BAA8DqB,EAAAA,OAAAA,KAAY,CACxEC,cAAc,EACdC,SAAU,iBAKdtB,GAAS0D,EAAAA,EAAAA,IAAW1C,IAMpBI,EAAAA,OAAAA,QAAA,mBAA2BtB,EAA3B,uBAAsDsB,EAAAA,OAAAA,KAAY,CAC9DC,cAAc,EACdC,SAAU,gBAGdM,IAtBC,CAuBF,EA6BC,UACI,UAAC,EAAD,YACE,SAAC,GAAD,UAAM,qBACV,UAAC,GAAD,WAAO,QAEL,SAAC,GAAD,CACEC,KAAK,OACL/B,KAAK,OACL4B,MAAO5B,EACPiC,SAAUwB,EACVtB,QAAQ,yHACRC,MAAM,yIACNC,SAAS,sBAIb,UAAC,GAAD,WAAO,SAEL,SAAC,GAAD,CACEN,KAAK,MACL/B,KAAK,SACL4B,MAAO3B,EACHgC,SAAUwB,EACVvB,YAAY,0BAChBC,QAAQ,2FACRC,MAAM,+FACNC,SAAS,8BAGT,iBAAKC,MAAO,CAAEC,QAAS,OAAQC,IAAK,QAASqB,OAAO,QAApD,WACE,SAAC,GAAD,CAAQ9B,KAAK,SAASU,UAAWzC,IAASC,EAA1C,SAAmD,iBACnD,SAAC,GAAD,CAAQ8B,KAAK,SAASxC,QAAST,EAA/B,SAAwC,oBAOnD,EC3HYe,GAAQ1B,EAAAA,EAAAA,MAAH,uIAQL2B,GAAQ3B,EAAAA,EAAAA,MAAH,yJ,WCJL2F,GAAS,WAEpB,IAAM5D,GAAWC,EAAAA,EAAAA,MACX4D,GAASnD,EAAAA,EAAAA,IAAYoD,EAAAA,IAE3B,OACE,UAAC,GAAD,WAAO,yBAEL,SAAC,GAAD,CACEjC,KAAK,OACL/B,KAAK,iBACL4B,MAAOmC,EACP9B,SAAU,SAAChD,GAAD,OAAWiB,GAAS+D,EAAAA,GAAAA,GAAahF,EAAMQ,cAAcmC,OAArD,MAIjB,ECpBYpD,GAAML,EAAAA,EAAAA,IAAH,4UAeHE,GAAOF,EAAAA,EAAAA,GAAH,+C,iCCSF,SAAS+F,KACtB,OAAkC5D,EAAAA,EAAAA,WAAS,GAA3C,eAAOsC,EAAP,KAAkBC,EAAlB,KAEMC,EAAa,WACbF,GACFC,GAAa,EAEhB,EAQK3C,GAAWC,EAAAA,EAAAA,MAGjB,GAA6BgE,EAAAA,GAAAA,KAArBC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,MAcnB,OAJAtF,EAAAA,EAAAA,YAAU,WACRmB,GAASoE,EAAAA,EAAAA,MACV,GAAE,CAACpE,KAGF,iCACE,SAAC,MAAD,WACE,2BAAO,gBAOT,UAAC,GAAD,WACGmE,IAAS,uBAAIA,IACbD,GACC,SAAC,MAAD,CACEG,YAAY,oBACZC,YAAY,IACZC,kBAAkB,OAClB1B,MAAM,KACN2B,SAAS,KAGX,iCACI,iBAAKpC,MAAO,CACVC,QAAS,OACToC,eAAgB,gBAChBC,WAAY,UAHd,WAME,SAAC,GAAD,UAAM,cACN,SAAC,GAAD,CAAQ7C,KAAK,SAAUxC,QApDnB,WACXqD,GACHC,GAAa,EAEhB,EAgDa,SAA2C,oBAE/C,SAACiB,GAAD,KACE,SAACZ,EAAD,IACCN,IACP,SAAC,EAAD,CAAO9D,QAASgE,EAAhB,UACE,SAACQ,GAAD,CACExE,QAASgE,cAQpB,C","sources":["components/ContactListItem/ContactListItem.styled.js","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","components/EditForm/EditForm.styled.js","components/EditForm/EditForm.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/filter.jsx","pages/contactsPage/ContactsPage.styled.js","pages/contactsPage/ContactsPage.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const SearchList = styled.ul`\n  padding: 0px;\n  margin: 0px;\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  flex-direction: row;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 10px;\n  color: blue;\n  justify-content: space-between;\n  // padding: 2px;\n\n  cursor: pointer;\n\n  &:hover {\n    background-color: #f0f0f0;\n\n    button {\n      // border-color: red;\n      // color: red;\n      opacity: 1;\n      // transform: scale(1.025);\n    }\n  }\n`;\n\nexport const Text = styled.p`\n  margin: 0;\n  :not(:last-child) {\n    margin-right: 5px;\n  }\n`;\n\nexport const Button = styled.button`\n  font-size: 12px;\n  width: 50px;\n  height: 24px;\n  background-color: white;\n  border: 1px solid gray;\n  border-radius: 5px;\n  cursor: pointer;\n  opacity: 0.6;\n\n  &:hover,\n  &:focus {\n    border-color: red;\n    color: red;\n    opacity: 1;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const ModalOverlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0, 0.6);\n  z-index: 1200;\n`;\nexport const Box = styled.div`\n  padding: 30px 40px;\n  width: 440px;\n  background-color: #fff;\n  border: 1px solid #aaa;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px -1px,\n    rgba(0, 0, 0, 0.14) 0px 4px 5px 0px,\n    rgba(11, 127, 171, 0.5) 0px 0px 25px 5px;\n\n  margin: 0 auto;\n  /* margin: 30px auto; */\n  // margin: 40px;\n  // max-width: fit-content;\n`;\n\nexport const ModalField = styled.div`\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n`;\n","import PropTypes from 'prop-types';\n\nimport { useEffect } from \"react\";\nimport { ModalOverlay, ModalField, Box } from './Modal.styled';\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.querySelector('#modal-root');\n\nconst Modal = ({ children, onClose }) => {\n  useEffect(() => {\n    const handleOnClose = event => {\n      if (event.code === \"Escape\") {\n        onClose();\n      };\n    };\n\n    window.addEventListener('keydown', handleOnClose);\n\n    return () => {\n      window.removeEventListener('keydown', handleOnClose);\n    };\n    \n  }, [onClose]);\n\n  const handleBackdropClick = e => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    };\n  };\n\n  return createPortal(\n    <ModalOverlay onClick={(e) => handleBackdropClick(e)}>\n      <ModalField>\n        <Box>\n          {children}\n        </Box>\n      </ModalField>\n    </ModalOverlay>, modalRoot\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.element.isRequired,\n  onClose: PropTypes.func.isRequired,\n};\n\nexport default Modal;","import styled from '@emotion/styled';\n\nexport const FormStyle = styled.div`\n  margin: 0px;\n  color: block;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  /* padding: 0 20px; */\n  padding: 0;\n  /* border: 1px solid gray; */\n  border-radius: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n  width: 400px;\n  height: 25px;\n  border: 0.5px solid black;\n  border-radius: 5px;\n  padding: 5px 15px;\n  letter-spacing: 1.5px;\n  font-size: 18px;\n`;\n\nexport const Button = styled.button`\n  width: 96px;\n  height: 24px;\n  background-color: white;\n  border: 1px solid gray;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    border-color: green;\n    color: green;\n    // background-color: lightgreen;\n  }\n\n  &:disabled {\n    cursor: auto;\n    border-color: gray;\n    color: gray;\n    background-color: lightgray;\n  }\n`;\n\nexport const Text = styled.h2`\n  margin: 0 0 10px 0;\n`;","import PropTypes from 'prop-types';\nimport { FormStyle, Label, Input, Button ,Text} from \"./EditForm.styled\";\n\nimport { useDispatch, useSelector } from \"react-redux\"; \nimport {  editContact } from \"redux/operations\";\nimport { useState } from 'react';\nimport { selectContacts } from 'redux/selectors';\nimport { Notify } from 'notiflix';\n\n\nconst EditForm = ({ onClose, id, name, number }) => {\n  \n  const dispatch = useDispatch();\n  \n  const initialName = name;\n  const initialNumber = number;\n  \n    \n  const [editName, setEditName] = useState(name);\n  const [editNumber, setEditNumber] = useState(number);\n\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const editContactName = contacts.find(contact => contact.name.toLowerCase() === editName.toLowerCase().trim());\n      \n    const editContactNumber = contacts.find(contact => contact.number === editNumber);\n    if (editContactName & !editContactNumber) {\n      Notify.failure(`Name  \"${editName}\"  is already in contacts`, Notify.init({\n        clickToClose: true,\n        position: 'center-top',\n      }));\n      return;\n    }\n    if (editContactNumber & !editContactName) {\n      Notify.failure(`Phone   \"${editNumber}\"  is already in contacts`, Notify.init({\n        clickToClose: true,\n        position: 'center-top',\n      }));\n      return;\n    }\n\n    \n    const form = event.currentTarget;\n    dispatch(editContact({\n      id,\n      name: form.elements.name.value,\n      number: form.elements.number.value,\n    }));\n\n    setTimeout(() => {\n      dispatch(editContact())\n    }, 500);\n\n    if (initialName !== editName) {\n     Notify.success(`Contact   \"${initialName}\"  has been changed to \"${editName}\"`, Notify.init({\n        clickToClose: true,\n        position: 'center-top',\n        }));\n    }\n    if (initialNumber !== editNumber) {\n     Notify.success(`Contact   \"${initialName}\"  number changed \"`, Notify.init({\n        clickToClose: true,\n        position: 'center-top',\n        }));\n      }\n\n    form.reset();\n  };\n\n\n\n\n  return(\n    <>\n    <form onSubmit={handleSubmit}>\n      <FormStyle>      \n          <Text>Edit contact</Text>\n      <Label>\n        Name \n        <Input\n          type='text' \n          name='name'\n          defaultValue={initialName} \n          onChange={(event) => setEditName(event.target.value)}\n          placeholder=\"John Smith\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label> \n\n      <Label>\n        Phone \n        <Input\n          type='tel' \n          name='number'\n          defaultValue={initialNumber} \n          onChange={(event) => setEditNumber(event.target.value)}\n          placeholder=\"_ _ _ - _ _ _ - _ _ _ _\"\n          pattern=\"^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label> \n\n          <div style={{ display: 'flex', gap: '20px', }}>\n            <Button\n              type=\"submit\"\n              disabled={initialName === editName & initialNumber === editNumber}\n            >Save</Button>\n            <Button type=\"button\" onClick={onClose}>Cancel</Button>\n          </div>\n    </FormStyle>\n    </form>\n    </>\n  )\n}\n\nexport default EditForm;\n\nEditForm.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};","import PropTypes from \"prop-types\";\nimport { SearchList, ContactItem, Text, Button } from './ContactListItem.styled';\nimport { useDispatch } from \"react-redux\";\nimport { deleteContact } from \"redux/operations\";\n\nimport { useState } from \"react\";\nimport Modal from \"components/Modal/Modal\";\nimport EditForm from \"components/EditForm/EditForm\";\nimport { Notify } from \"notiflix\";\n\nexport const ContactListItem = ({ renderListItem: { id, name, number } }) => {\n  const [showModal, setShowModal] = useState(false);\n\n  const closeModal = () => {\n    if (showModal) {\n      setShowModal(false);\n    };\n  };\n\n  const openModal = () => {\n    if (!showModal) {\n      setShowModal(true);\n    };\n  };\n  \n  const dispatch = useDispatch();\n\n  const handleDeletContact = ()=>{\n    dispatch(deleteContact(id));\n    Notify.success(`Contact   \"${name}\"  deleted`, Notify.init({\n        clickToClose: true,\n        position: 'center-top',\n        }));\n  }\n\n  return ( \n\n    <ContactItem key={id}>\n      <SearchList>\n        <Text>{name}:</Text>\n        <Text>{number}</Text>\n      </SearchList>\n      <div style={{display: \"flex\", gap: '10px'}}>\n        <Button type=\"button\" style={{width:'36px'}} onClick={openModal}>\n        Edit\n      </Button>\n        <Button type=\"button\" onClick={handleDeletContact}>\n        Delete\n      </Button>\n      </div>\n      {showModal &&\n        <Modal onClose={closeModal}>\n          <EditForm\n            id={id}\n            name={name}\n            number={number}\n            onClose={closeModal}\n          />\n        </Modal>}\n    </ContactItem> \n     \n  );\n};\n\nContactListItem.propTypes = {\n  renderListItem: PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }).isRequired,\n};","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  /* padding: 0px 0px 0px 20px; */\n  padding: 0;\n`;\n","import { ContactListItem } from \"../ContactListItem/ContactListItem\";\n\nimport { List } from \"./ContactList.styled\";\n\nimport {  useSelector } from \"react-redux\";\nimport { selectFilteredContacts } from \"redux/selectors\";\n\n\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredContacts);\n  return (\n    <>\n    <List>    \n        {filteredContacts.map(contact => (\n            <ContactListItem\n              key={contact.id}\n              renderListItem={contact}\n            />            \n          )\n        )}    \n    </List>  \n    </> \n  );\n};\n\n","import styled from '@emotion/styled';\n\nexport const FormStyle = styled.div`\n  margin: 0px;\n  color: block;\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n  /* padding: 0 20px; */\n  padding: 0;\n  /* border: 1px solid gray; */\n  border-radius: 15px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n  width: 400px;\n  height: 25px;\n  border: 0.5px solid black;\n  border-radius: 5px;\n  padding: 5px 15px;\n  letter-spacing: 1.5px;\n  font-size: 18px;\n`;\n\nexport const Button = styled.button`\n  width: 140px;\n  height: 24px;\n  background-color: white;\n  border: 1px solid gray;\n  border-radius: 5px;\n\n  &:hover,\n  &:focus {\n    cursor: pointer;\n    border-color: green;\n    color: green;\n    // background-color: lightgreen;\n  }\n\n  &:disabled {\n    cursor: auto;\n    border-color: gray;\n    color: gray;\n    background-color: lightgray;\n  }\n`;\n\nexport const Text = styled.h2`\n  margin: 0 0 10px 0;\n`;\n","import { useState } from \"react\";\n\nimport { FormStyle, Label, Input, Button, Text } from \"./ContactForm.styled\";\n\nimport { useDispatch, useSelector } from \"react-redux\"; \nimport { addContact } from \"redux/operations\";\nimport { selectContacts } from \"redux/selectors\";\nimport { Notify } from \"notiflix\";\n\n\nexport const ContactForm = ({ onClose }) => {\n  \n  //локальный стейт для формы\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contact = {\n      name: name,\n      number: number,\n  }\n  \n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const newContactName = contacts.find(contact => contact.name.toLowerCase() === name.toLowerCase().trim());\n    if (newContactName) {\n      Notify.failure(`Name  \"${name}\"  is already in contacts`, Notify.init({\n        clickToClose: true,\n        position: 'center-top',\n      }));\n      return;\n    }\n\n    const newContactNumber = contacts.find(contact => contact.number === number);\n    if (newContactNumber) {\n      Notify.failure(`Phone   \"${number}\"  is already in contacts`, Notify.init({\n        clickToClose: true,\n        position: 'center-top',\n      }));\n      return;\n    }\n\n    dispatch(addContact(contact));\n\n    // setTimeout(() => {\n    //   dispatch(addContact())\n    // }, 500);\n\n    Notify.success(`Contact \"${name}\" added in contacts`, Notify.init({\n        clickToClose: true,\n        position: 'center-top',\n      }));\n\n    reset();\n  };\n\n  //изменение значений полей импута через стейт\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n     switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  //очистка полей инпута\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n\n  return(\n    <>\n    <form onSubmit={handleSubmit}>\n        <FormStyle>      \n          <Text>Add new contact</Text>\n      <Label>\n        Name \n        <Input\n          type='text' \n          name='name'\n          value={name} \n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required='Name required'\n        />\n      </Label> \n\n      <Label>\n        Phone \n        <Input\n          type='tel' \n          name='number'\n          value={number} \n              onChange={handleChange}\n              placeholder=\"_ _ _ - _ _ _ - _ _ _ _\"\n          pattern=\"^\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}$\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required='Phone number required'\n        />\n      </Label> \n          <div style={{ display: 'flex', gap: '140px', margin:'auto'}}>\n            <Button type=\"submit\" disabled={!name || !number} >Add contact</Button>\n            <Button type=\"button\" onClick={onClose}>Cancel</Button>\n          </div>\n          \n    </FormStyle>\n    </form>\n    </>\n  )\n}\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n  font-weight: 500;\n  color: lightgrey;\n`;\n\nexport const Input = styled.input`\n  margin-top: 5px;\n  width: 250px;\n  height: 25px;\n  border: 0.5px solid black;\n  border-radius: 5px;\n  padding: 5px 15px;\n`;\n","\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Label, Input } from './Filter.styled'\nimport { changeFilter } from 'redux/filterSlice';\nimport { selectFilter } from 'redux/selectors';\n\nexport const Filter = () => {\n\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter)\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input\n        type=\"text\"\n        name='contactsFilter'\n        value={filter}\n        onChange={(event) => dispatch(changeFilter(event.currentTarget.value))}>\n      </Input>\n    </Label>\n  );\n};","import styled from '@emotion/styled';\n\nexport const Box = styled.div`\n  padding: 30px 40px;\n  width: 440px;\n\n  border: 1px solid #aaa;\n  border-radius: 15px;\n  box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px -1px,\n    rgba(0, 0, 0, 0.14) 0px 4px 5px 0px,\n    rgba(11, 127, 171, 0.5) 0px 0px 25px 5px;\n\n  margin: 30px auto;\n  // margin: 40px;\n  // max-width: fit-content;\n`;\n\nexport const Text = styled.h1`\n  margin: 0 0 10px 0;\n`;\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\n// import { Helmet } from 'react-helmet';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { fetchContacts } from 'redux/operations';\nimport { Filter } from 'components/Filter/filter';\n// import { Container, Box } from '@mui/material\n\nimport { Box } from './ContactsPage.styled';\nimport { Text } from './ContactsPage.styled';\n\nimport {\n  // useAuth,\n  useContact\n} from 'hooks';\nimport { RotatingLines } from 'react-loader-spinner';\n// import { useNavigate } from 'react-router-dom';\n\nimport { Helmet } from 'react-helmet-async';\nimport { Button } from 'components/ContactForm/ContactForm.styled';\nimport Modal from 'components/Modal/Modal';\n\n\n\n\nexport default function ContactsPage() {\n  const [showModal, setShowModal] = useState(false);\n\n  const closeModal = () => {\n    if (showModal) {\n      setShowModal(false);\n    };\n  };\n\n  const openModal = () => {\n    if (!showModal) {\n      setShowModal(true);\n    };\n  };\n  \n  const dispatch = useDispatch();\n  // const navigate = useNavigate();\n\n  const { isLoading, error } = useContact();\n  // const { isLoggedIn } = useAuth();\n\n  // useEffect(() => {\n  //   if (!isLoggedIn) {\n  //     navigate('/login');\n  //   }\n  //   // eslint-disable-next-line\n  // }, [isLoggedIn]);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <Helmet>\n        <title>Contacts</title>\n      </Helmet>\n      {/* <Box> */}\n        {/* <Text>Phonebook</Text> */}\n        {/* <ContactForm /> */}\n      {/* </Box> */}\n\n      <Box>\n        {error && <p>{error}</p>}\n        {isLoading ? (\n          <RotatingLines\n            strokeColor=\"rgb(11, 127, 171)\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        ) : (\n          <>\n              <div style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                \n              }}>\n                <Text>Contacts</Text>\n                <Button type=\"button\"  onClick={openModal}>Add contact</Button>\n              </div>\n            <Filter />\n              <ContactList />\n              {showModal &&\n        <Modal onClose={closeModal}>\n          <ContactForm\n            onClose={closeModal}\n          />\n        </Modal>}\n          </>\n        )}\n      </Box>\n    </>\n  );\n}\n"],"names":["SearchList","styled","ContactItem","Text","Button","ModalOverlay","Box","ModalField","modalRoot","document","querySelector","children","onClose","useEffect","handleOnClose","event","code","window","addEventListener","removeEventListener","createPortal","onClick","e","currentTarget","target","handleBackdropClick","FormStyle","Label","Input","id","name","number","dispatch","useDispatch","initialName","initialNumber","useState","editName","setEditName","editNumber","setEditNumber","contacts","useSelector","selectContacts","onSubmit","preventDefault","editContactName","find","contact","toLowerCase","trim","editContactNumber","Notify","clickToClose","position","form","editContact","elements","value","setTimeout","reset","type","defaultValue","onChange","placeholder","pattern","title","required","style","display","gap","disabled","ContactListItem","renderListItem","showModal","setShowModal","closeModal","width","deleteContact","List","ContactList","filteredContacts","selectFilteredContacts","map","ContactForm","setName","setNumber","handleChange","newContactName","newContactNumber","addContact","margin","Filter","filter","selectFilter","changeFilter","ContactsPage","useContact","isLoading","error","fetchContacts","strokeColor","strokeWidth","animationDuration","visible","justifyContent","alignItems"],"sourceRoot":""}